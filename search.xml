<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Shortest path problem</title>
    <url>/2020/06/23/Shortest%20path%20problem/</url>
    <content><![CDATA[<h1 id="Single-Agent"><a href="#Single-Agent" class="headerlink" title="Single Agent"></a>Single Agent</h1><ul>
<li><p>Single source</p>
<ul>
<li><p>Dijkstra<br><a href="https://github.com/iiiIgnorance/UESTC-Navigation/blob/master/README.md" target="_blank" rel="noopener">UESTC-Navigation</a></p>
</li>
<li><p>Bellman-Ford</p>
</li>
<li><p>SPFA</p>
</li>
</ul>
</li>
<li><p>Multi-Source</p>
<ul>
<li><p>Floyd</p>
</li>
<li><p>A-star<br><a href="https://blog.csdn.net/hitwhylz/article/details/23089415" target="_blank" rel="noopener">Introduce</a><br><a href="https://github.com/lnp1993/Astar" target="_blank" rel="noopener">Code</a></p>
</li>
</ul>
</li>
</ul>
<h1 id="Multi-Agent"><a href="#Multi-Agent" class="headerlink" title="Multi-Agent"></a>Multi-Agent</h1><h2 id="MAPF"><a href="#MAPF" class="headerlink" title="MAPF"></a><a href="http://mapf.info/index.php/Main/Benchmarks" target="_blank" rel="noopener">MAPF</a></h2><hr>
<p><em>Improved Heuristics for Multi-Agent Path Finding with Conflict-Based Search</em><br><a href="https://github.com/Jiaoyang-Li/CBSH2/blob/master/2019-IJCAI.pdf" target="_blank" rel="noopener">2019-IJCAI</a></p>
<h3 id="0-Abstract"><a href="#0-Abstract" class="headerlink" title="0. Abstract"></a>0. Abstract</h3><pre><code>Two new admissible heuristics</code></pre><h3 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1. Introduction"></a>1. Introduction</h3><pre><code>Optimal MAPF algorithms in recent years
CBS theory and application
CG(current solution);DG,WDG(future solutions)</code></pre><h3 id="2-Background"><a href="#2-Background" class="headerlink" title="2. Background"></a>2. Background</h3><h4 id="2-1-Problem-Definition"><a href="#2-1-Problem-Definition" class="headerlink" title="2.1 Problem Definition"></a>2.1 Problem Definition</h4><pre><code>MAPF problem definition and goal</code></pre><h4 id="2-2-CBS"><a href="#2-2-CBS" class="headerlink" title="2.2 CBS"></a>2.2 CBS</h4><pre><code>Two levels
High level:constraint tree(N.constraints,N.solution,N.cost)
Check conflict in solution:
    1.none,return;
    2.otherwise,split N into two child node with constraint and low level find path,if no solution the node will be pruned</code></pre><h4 id="2-3-ICBS"><a href="#2-3-ICBS" class="headerlink" title="2.3 ICBS"></a>2.3 ICBS</h4><pre><code>Choice rule:
    1.cardinal(child nodes cost both larger than father);
    2.semi-cardinal(one child node);
    3.non-cardinal(none)
MDD classify conflicts:
    1.cardinal:both only way at level t;
    2.semin-cardinal:only one;
    3.cardinal:none</code></pre><h4 id="2-4-CBSH-CG"><a href="#2-4-CBSH-CG" class="headerlink" title="2.4 CBSH(CG)"></a>2.4 CBSH(CG)</h4><pre><code>Speed up the high level search:
    1.one cardinal:n+1;
    2.multiple cardinal:build graph,one agent(in its edges) in cardinal conflict increase at least 1</code></pre><h3 id="3-Limitation-of-CG-Heuristic"><a href="#3-Limitation-of-CG-Heuristic" class="headerlink" title="3. Limitation of CG Heuristic"></a>3. Limitation of CG Heuristic</h3><pre><code>Only cna find an h-value of at most 1
Only in N solution(current solution)</code></pre><h3 id="4-The-DG-Heuristic"><a href="#4-The-DG-Heuristic" class="headerlink" title="4. The DG Heuristic"></a>4. The DG Heuristic</h3><h4 id="4-1-4-2-Pairwise-Dpendency-Graph-G-D"><a href="#4-1-4-2-Pairwise-Dpendency-Graph-G-D" class="headerlink" title="4.1,4.2 Pairwise Dpendency Graph G(D)"></a>4.1,4.2 Pairwise Dpendency Graph G(D)</h4><pre><code>Consider future solutions
Construct G(D):
    1.three categories:
        a.no conflict:independent;
        b.one cardinal:dependent;
        c.semi-cardinal or non-cardinal:merge MDD to decide
    2.G(D)=(V(D),E(D);each agent a(i) induces a vertes v(i)∈V（D);an adge(v(i),v(j))∈E(D) if a(i) and a(j) are dependent.
    3.the cost of path of at least one agent has to incease by at least 1</code></pre><h4 id="4-3-Merging-the-MDDs"><a href="#4-3-Merging-the-MDDs" class="headerlink" title="4.3 Merging the MDDs"></a>4.3 Merging the MDDs</h4><pre><code>The goint MDD is build level by level,it starts at the joing state(s(i),s(j)) at level 0.Suppose that we already have a joint state(v(i),v(j)) at level t and want to add its child nodes at level t+1.Each pair in the cross product of the child nodes of v(i) at level t in the MDD for a(i) and the child nodes of v(j) at level t in the MDD for a(j) shoule be examined.Only conflict-free pairs are added.If it does not contain state(g(i),g(j)),a(i) and a(j) are dependent.</code></pre><h3 id="5-The-WDG-Heuristic"><a href="#5-The-WDG-Heuristic" class="headerlink" title="5. The WDG Heuristic"></a>5. The WDG Heuristic</h3><pre><code>WDG captures both the pairwise dependencies between between agents and the extra cost that each pair of denpendent agents will contribute to the total cost.</code></pre><h4 id="5-1-5-2-Weighted-Pairwise-Dependency-Graph-G-WD"><a href="#5-1-5-2-Weighted-Pairwise-Dependency-Graph-G-WD" class="headerlink" title="5.1,5.2 Weighted Pairwise Dependency Graph G(WD)"></a>5.1,5.2 Weighted Pairwise Dependency Graph G(WD)</h4><pre><code>It uses the same vertices and edges as G(D).
The Weight on each edge(v(i),v(j))∈E（D） equals ▲(ij) at N.</code></pre><h4 id="5-3-The-Two-Agent-Problem"><a href="#5-3-The-Two-Agent-Problem" class="headerlink" title="5.3 The Two-Agent Problem"></a>5.3 The Two-Agent Problem</h4><pre><code>As CBSH searches in a best-first manner,it has to expand all CT nodes of cost 8.However,if the h-value of the root CT node is 1,with a good tie-breaking rule(such as depth-first),CBSH can quickly generate a CT node of cost 9 with an optimal solution and return this solution immediately.</code></pre><h3 id="Runtime-Reduction-Techniques"><a href="#Runtime-Reduction-Techniques" class="headerlink" title="Runtime Reduction Techniques"></a>Runtime Reduction Techniques</h3><pre><code>Lazy Computation of Heuristics:It first computes a cheaper but less informed h-value h1(N)(or even uses zero) and inserts N into OPEN.Only when N emerges from OPEN,it computes h2(N) for it and re-inserts it into OPENS
Memoization:Use memoization to store the results of merging the MDDs and solving the two-agent problems.The inputs are the indices of two agent and the set of constraints imposed on them.The output is theexistence of the corresponding edge and its weight.</code></pre>]]></content>
      <categories>
        <category>arithmetic</category>
      </categories>
      <tags>
        <tag>arithmetic</tag>
      </tags>
  </entry>
  <entry>
    <title>Tool</title>
    <url>/2020/06/20/Tool/</url>
    <content><![CDATA[<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><p><a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">Grammar</a></p>
<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><p><a href="https://blog.csdn.net/tianzongnihao/article/details/80539264?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522159289918919725247607664%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=159289918919725247607664&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-80539264.first_rank_ecpm_v3_pc_rank_v3&utm_term=linux%E5%91%BD%E4%BB%A4" target="_blank" rel="noopener">Grammar</a></p>
<h1 id="Assembly"><a href="#Assembly" class="headerlink" title="Assembly"></a>Assembly</h1><p><a href="https://zhuanlan.zhihu.com/c_144694924" target="_blank" rel="noopener">QuickStarts</a></p>
]]></content>
      <categories>
        <category>tool</category>
      </categories>
      <tags>
        <tag>tool</tag>
      </tags>
  </entry>
  <entry>
    <title>Discrete Optimization</title>
    <url>/2020/06/20/Discrete%20Optimization/</url>
    <content><![CDATA[<h1 id="Simulated-Annealing"><a href="#Simulated-Annealing" class="headerlink" title="Simulated Annealing"></a>Simulated Annealing</h1><p><a href="https://blog.csdn.net/zhouzi2018/article/details/82118673?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">Introduce</a></p>
<h1 id="Tabu-Search"><a href="#Tabu-Search" class="headerlink" title="Tabu Search"></a>Tabu Search</h1><p><a href="https://www.cnblogs.com/dengfaheng/p/9737556.html" target="_blank" rel="noopener">Introduce</a></p>
]]></content>
      <categories>
        <category>arithmetic</category>
      </categories>
      <tags>
        <tag>arithmetic</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/06/20/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<a id="more"></a>

<h2 id="Hello"><a href="#Hello" class="headerlink" title="Hello"></a>Hello</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
</search>
